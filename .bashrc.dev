# .bashrc.dev â€” Vulkan (LunarG default) / GLES C++ Dev Container
# Prints a comprehensive tool inventory via `devinfo` (used by .bash_profile banner)

# Source global definitions
if [ -f /etc/bashrc ]; then . /etc/bashrc; fi

# PATH
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]; then
  PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi
export PATH
export LESS='-R'

# Colors
RED=$'\033[0;31m'; GREEN=$'\033[0;32m'; YELLOW=$'\033[1;33m'
BLUE=$'\033[1;34m'; CYAN=$'\033[1;36m'; MAGENTA=$'\033[1;35m'
BOLD=$'\033[1m'; DIM=$'\033[2m'; RESET=$'\033[0m'

# Aliases
alias ls='ls --color=auto'
alias ll='ls -alF'
alias la='ls -A'
alias grep='grep --color=auto'

# Git branch on prompt
_git_branch() {
  local b; b="$(git rev-parse --abbrev-ref HEAD 2>/dev/null)" || return 0
  [ "$b" != "HEAD" ] && printf ' (%s)' "$b"
}

# Prompt
PS1='\[\e[1;32m\]\u@\h\[\e[0m\]:\[\e[1;34m\]\w\[\e[0m\]$(_git_branch) \$ '

# ---------- Version helpers ----------
_ver() {
  # _ver <cmd> [printable-name]
  local cmd="$1" name="${2:-$1}"
  if command -v "$cmd" >/dev/null 2>&1; then
    # Try a few common version switches quickly
    local out
    out="$("$cmd" --version 2>/dev/null | head -n1)"
    if [ -z "$out" ]; then out="$("$cmd" -v 2>/dev/null | head -n1)"; fi
    if [ -z "$out" ]; then out="$("$cmd" -V 2>/dev/null | head -n1)"; fi
    printf "  %-18s %s\n" "${YELLOW}${name}:${RESET}" "${out:-available}"
  else
    printf "  %-18s %s\n" "${YELLOW}${name}:${RESET}" "${RED}MISSING${RESET}"
  fi
}

_lsdir_one() {
  # Print first entry of a dir (used to display pinned Android versions)
  local d="$1"
  if [ -d "$d" ]; then
    local first; first="$(ls -1 "$d" 2>/dev/null | head -n1)"
    [ -n "$first" ] && printf "%s" "$first" || printf "<none>"
  else
    printf "<none>"
  fi
}

# ---------- Group printers (fast, non-invasive) ----------
_ver_group_compilers() {
  echo -e "${CYAN}${BOLD}Compilers & Build:${RESET}"
  _ver clang
  _ver clang++ "clang++"
  _ver lld
  _ver lldb
  _ver gcc
  _ver g++ "g++"
  _ver cmake
  _ver ninja "ninja"
  _ver make
  _ver pkg-config "pkg-config"
  _ver ccache
  _ver ld "binutils-ld"
  _ver ar "binutils-ar"
  _ver ranlib "binutils-ranlib"
  _ver java "java (JRE)"
  _ver javac "javac (JDK compiler)"
}

_ver_group_debug() {
  echo -e "${CYAN}${BOLD}Debuggers & Profilers:${RESET}"
  _ver gdb
  _ver lldb
  _ver valgrind
  _ver strace
  _ver ltrace
  _ver pahole "dwarves (pahole)"
  _ver addr2line
  _ver llvm-symbolizer
}

_ver_group_graphics() {
  echo -e "${CYAN}${BOLD}Graphics / GPU / Shaders:${RESET}"
  # Vulkan & shaders
  _ver vulkaninfo
  _ver glslangValidator
  _ver glslc
  _ver spirv-as
  _ver spirv-val
  _ver spirv-opt
  _ver spirv-cross
  _ver apitrace
  _ver gfxreconstruct "gfxreconstruct"
  # GLES utils
  _ver glxinfo
  _ver es2_info "es2_info"
}

_ver_group_android() {
  echo -e "${CYAN}${BOLD}Android Toolchain:${RESET}"
  _ver sdkmanager
  _ver adb
  _ver aapt
  _ver aapt2
  _ver ndk-build "ndk-build"
  # Quick path version hints
  local bt ver_bt plat ver_ndk
  bt="$(_lsdir_one "${ANDROID_SDK_ROOT:-/opt/android-sdk}/build-tools")"
  plat="$(_lsdir_one "${ANDROID_SDK_ROOT:-/opt/android-sdk}/platforms")"
  ver_ndk="$(_lsdir_one "${ANDROID_NDK_ROOT:-/opt/android-ndk}")"
  printf "  %-18s %s\n" "${YELLOW}build-tools:${RESET}"    "${bt}"
  printf "  %-18s %s\n" "${YELLOW}platform:${RESET}"        "${plat}"
  printf "  %-18s %s\n" "${YELLOW}NDK dir:${RESET}"         "${ver_ndk}"
}

_ver_group_db_net() {
  echo -e "${CYAN}${BOLD}DB / Networking / Compression:${RESET}"
  _ver psql
  _ver sqlite3
  _ver openssl
  _ver curl
  _ver wget
  _ver rsync
  _ver ssh "OpenSSH client (ssh)"
  _ver netcat "netcat"
  _ver traceroute
  _ver gzip
  _ver bzip2
  _ver xz
  _ver brotli
  _ver zip
  _ver unzip
  _ver tar
}

_ver_group_utils() {
  echo -e "${CYAN}${BOLD}Dev Utilities & Editors:${RESET}"
  _ver git
  _ver git-lfs "git-lfs"
  _ver nano
  _ver vim
  _ver less
  _ver htop
  _ver tree
  _ver rg "ripgrep (rg)"
  _ver fd "fd-find (fd)"
  _ver file
}

_env_snapshot() {
  echo -e "${CYAN}${BOLD}Environment & Paths:${RESET}"
  printf "  %-18s %s\n" "${YELLOW}VULKAN_SDK:${RESET}"       "${VULKAN_SDK:-<unset>}"
  printf "  %-18s %s\n" "${YELLOW}ANDROID_SDK_ROOT:${RESET}"  "${ANDROID_SDK_ROOT:-<unset>}"
  printf "  %-18s %s\n" "${YELLOW}ANDROID_NDK_ROOT:${RESET}"  "${ANDROID_NDK_ROOT:-<unset>}"
  printf "  %-18s %s\n" "${YELLOW}CCACHE_DIR:${RESET}"        "${CCACHE_DIR:-<unset>}"
  printf "  %-18s %s\n" "${YELLOW}DISPLAY:${RESET}"           "${DISPLAY:-<unset>}"
  printf "  %-18s %s\n" "${YELLOW}WAYLAND_DISPLAY:${RESET}"   "${WAYLAND_DISPLAY:-<unset>}"
  if [ -d /dev/dri ]; then
    printf "  %-18s %s\n" "${YELLOW}/dev/dri:${RESET}" "${GREEN}present${RESET}"
  else
    printf "  %-18s %s\n" "${YELLOW}/dev/dri:${RESET}" "${RED}absent${RESET}"
  fi
}

# ---------- Main: devinfo ----------
devinfo() {
  echo -e "${CYAN}${BOLD}======================== DEV CONTAINER INVENTORY ========================${RESET}"
  _env_snapshot
  echo
  _ver_group_compilers
  echo
  _ver_group_debug
  echo
  _ver_group_graphics
  echo
  _ver_group_android
  echo
  _ver_group_db_net
  echo
  _ver_group_utils
  echo -e "${CYAN}${BOLD}=======================================================================${RESET}"
}
